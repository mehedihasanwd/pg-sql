users:

01. Write a query to find the 3 users with the highest IDs from the users table.

02. Create index for 'username' column.

03. Drop 'username' index from 'users' collection.

04. Write a query to check 'username' indexing and how much it takes to retrieve data. In other words, check if indexing takes less time to retrieve data.

05. Check how much time it takes to retrieve data from 'users' collection in both 'index' and without 'index'.

06. Join users and comments based on user id and print 'username', 'contents' if the username is 'Payton88'.

07. Join users and comments based on user id and print 'username', 'contents' if the username is 'Payton88' and apply 'EXPLAIN' and 'ANALYZE EXPLAIN' to check query performance.

------------------------------------------------------------------
posts:

01. Write a query to find all the posts by a particular user. Suppose user_id is 50. Print user_id and caption only.

------------------------------------------------------------------
comments:

------------------------------------------------------------------
likes:

01. Write a query to find and count total likes by per user.

------------------------------------------------------------------
photo_tags:

------------------------------------------------------------------
caption_tags:

------------------------------------------------------------------
hashtags:

------------------------------------------------------------------
hashtag_posts:

------------------------------------------------------------------
followers:

------------------------------------------------------------------
combine (users, caption_tags, photo_tags):

01. Show the 'username' of 'users' who were tagged in a 'caption' or 'photo' before January 7th, 2010. Also show the date they were tagged.

02. Use the "CTE" or 'Common Table Expression' to answer the quesion no 01.

03. Write a recursive "CTE" query to return values like 3, 2, 1

04. Write a recursive "CTE" to find the followers of a "user".

05. Write a query to display the most popular 'users' - the 'users' who were tagged the most.

06. Create a view combining 'photo_tags' and 'caption_tags'.

07. Write a query to display the most popular 'users' - the 'users' who were tagged the most. Use 'VIEW' to combine 'photo_tags' and 'caption_tags'

08. Creacte a 'VIEW' to display 10 'most recent' post.